ARM GAS  /var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	NMI_Handler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	NMI_Handler:
  27              	.LFB134:
  28              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f4xx_it.c ****   *
  16:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f4xx_it.c ****   */
  18:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f4xx_it.c **** 
  20:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f4xx_it.c **** #include "main.h"
  22:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  23:Core/Src/stm32f4xx_it.c **** #include "_i2c.h"
  24:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f4xx_it.c **** 
  28:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s 			page 2


  31:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32f4xx_it.c **** 
  33:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f4xx_it.c **** 
  36:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f4xx_it.c **** 
  38:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f4xx_it.c **** 
  41:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f4xx_it.c **** 
  43:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f4xx_it.c **** 
  46:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f4xx_it.c **** 
  48:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f4xx_it.c **** 
  51:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f4xx_it.c **** 
  53:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f4xx_it.c **** 
  56:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f4xx_it.c **** 
  58:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_i2c3_rx;
  60:Core/Src/stm32f4xx_it.c **** extern I2C_HandleTypeDef hi2c3;
  61:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim7;
  62:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart3;
  63:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim6;
  64:Core/Src/stm32f4xx_it.c **** 
  65:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  66:Core/Src/stm32f4xx_it.c **** 
  67:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  68:Core/Src/stm32f4xx_it.c **** 
  69:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  70:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  71:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  72:Core/Src/stm32f4xx_it.c **** /**
  73:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  74:Core/Src/stm32f4xx_it.c ****   */
  75:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  76:Core/Src/stm32f4xx_it.c **** {
  29              		.loc 1 76 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  77:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  78:Core/Src/stm32f4xx_it.c **** 
  79:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  80:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
ARM GAS  /var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s 			page 3


  81:Core/Src/stm32f4xx_it.c ****   while (1)
  36              		.loc 1 81 3 discriminator 1 view .LVU1
  82:Core/Src/stm32f4xx_it.c ****   {
  83:Core/Src/stm32f4xx_it.c ****   }
  37              		.loc 1 83 3 discriminator 1 view .LVU2
  81:Core/Src/stm32f4xx_it.c ****   {
  38              		.loc 1 81 9 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE134:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	HardFault_Handler:
  51              	.LFB135:
  84:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  85:Core/Src/stm32f4xx_it.c **** }
  86:Core/Src/stm32f4xx_it.c **** 
  87:Core/Src/stm32f4xx_it.c **** /**
  88:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  89:Core/Src/stm32f4xx_it.c ****   */
  90:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  91:Core/Src/stm32f4xx_it.c **** {
  52              		.loc 1 91 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
  92:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  93:Core/Src/stm32f4xx_it.c **** 
  94:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  95:Core/Src/stm32f4xx_it.c ****   while (1)
  59              		.loc 1 95 3 discriminator 1 view .LVU5
  96:Core/Src/stm32f4xx_it.c ****   {
  97:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  98:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  99:Core/Src/stm32f4xx_it.c ****   }
  60              		.loc 1 99 3 discriminator 1 view .LVU6
  95:Core/Src/stm32f4xx_it.c ****   {
  61              		.loc 1 95 9 discriminator 1 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE135:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	MemManage_Handler:
  74              	.LFB136:
 100:Core/Src/stm32f4xx_it.c **** }
ARM GAS  /var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s 			page 4


 101:Core/Src/stm32f4xx_it.c **** 
 102:Core/Src/stm32f4xx_it.c **** /**
 103:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 104:Core/Src/stm32f4xx_it.c ****   */
 105:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 106:Core/Src/stm32f4xx_it.c **** {
  75              		.loc 1 106 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 107:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 108:Core/Src/stm32f4xx_it.c **** 
 109:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 110:Core/Src/stm32f4xx_it.c ****   while (1)
  82              		.loc 1 110 3 discriminator 1 view .LVU9
 111:Core/Src/stm32f4xx_it.c ****   {
 112:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 113:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 114:Core/Src/stm32f4xx_it.c ****   }
  83              		.loc 1 114 3 discriminator 1 view .LVU10
 110:Core/Src/stm32f4xx_it.c ****   {
  84              		.loc 1 110 9 discriminator 1 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE136:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	BusFault_Handler:
  97              	.LFB137:
 115:Core/Src/stm32f4xx_it.c **** }
 116:Core/Src/stm32f4xx_it.c **** 
 117:Core/Src/stm32f4xx_it.c **** /**
 118:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 119:Core/Src/stm32f4xx_it.c ****   */
 120:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 121:Core/Src/stm32f4xx_it.c **** {
  98              		.loc 1 121 1 view -0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.L8:
 122:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 123:Core/Src/stm32f4xx_it.c **** 
 124:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 125:Core/Src/stm32f4xx_it.c ****   while (1)
 105              		.loc 1 125 3 discriminator 1 view .LVU13
 126:Core/Src/stm32f4xx_it.c ****   {
 127:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
ARM GAS  /var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s 			page 5


 128:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 129:Core/Src/stm32f4xx_it.c ****   }
 106              		.loc 1 129 3 discriminator 1 view .LVU14
 125:Core/Src/stm32f4xx_it.c ****   {
 107              		.loc 1 125 9 discriminator 1 view .LVU15
 108 0000 FEE7     		b	.L8
 109              		.cfi_endproc
 110              	.LFE137:
 112              		.section	.text.UsageFault_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	UsageFault_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	UsageFault_Handler:
 120              	.LFB138:
 130:Core/Src/stm32f4xx_it.c **** }
 131:Core/Src/stm32f4xx_it.c **** 
 132:Core/Src/stm32f4xx_it.c **** /**
 133:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 134:Core/Src/stm32f4xx_it.c ****   */
 135:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 136:Core/Src/stm32f4xx_it.c **** {
 121              		.loc 1 136 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L10:
 137:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 138:Core/Src/stm32f4xx_it.c **** 
 139:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 140:Core/Src/stm32f4xx_it.c ****   while (1)
 128              		.loc 1 140 3 discriminator 1 view .LVU17
 141:Core/Src/stm32f4xx_it.c ****   {
 142:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 143:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 144:Core/Src/stm32f4xx_it.c ****   }
 129              		.loc 1 144 3 discriminator 1 view .LVU18
 140:Core/Src/stm32f4xx_it.c ****   {
 130              		.loc 1 140 9 discriminator 1 view .LVU19
 131 0000 FEE7     		b	.L10
 132              		.cfi_endproc
 133              	.LFE138:
 135              		.section	.text.DebugMon_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	DebugMon_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	DebugMon_Handler:
 143              	.LFB139:
 145:Core/Src/stm32f4xx_it.c **** }
 146:Core/Src/stm32f4xx_it.c **** 
 147:Core/Src/stm32f4xx_it.c **** /**
 148:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
ARM GAS  /var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s 			page 6


 149:Core/Src/stm32f4xx_it.c ****   */
 150:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 151:Core/Src/stm32f4xx_it.c **** {
 144              		.loc 1 151 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 152:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 153:Core/Src/stm32f4xx_it.c **** 
 154:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 155:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 156:Core/Src/stm32f4xx_it.c **** 
 157:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 158:Core/Src/stm32f4xx_it.c **** }
 149              		.loc 1 158 1 view .LVU21
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE139:
 154              		.section	.text.DMA1_Stream2_IRQHandler,"ax",%progbits
 155              		.align	1
 156              		.global	DMA1_Stream2_IRQHandler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	DMA1_Stream2_IRQHandler:
 162              	.LFB140:
 159:Core/Src/stm32f4xx_it.c **** 
 160:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 161:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 162:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 163:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 164:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 165:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 166:Core/Src/stm32f4xx_it.c **** 
 167:Core/Src/stm32f4xx_it.c **** /**
 168:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream2 global interrupt.
 169:Core/Src/stm32f4xx_it.c ****   */
 170:Core/Src/stm32f4xx_it.c **** void DMA1_Stream2_IRQHandler(void)
 171:Core/Src/stm32f4xx_it.c **** {
 163              		.loc 1 171 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167 0000 08B5     		push	{r3, lr}
 168              	.LCFI0:
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 3, -8
 171              		.cfi_offset 14, -4
 172:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream2_IRQn 0 */
 173:Core/Src/stm32f4xx_it.c **** 
 174:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream2_IRQn 0 */
 175:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_i2c3_rx);
 172              		.loc 1 175 3 view .LVU23
 173 0002 0348     		ldr	r0, .L14
 174 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 175              	.LVL0:
ARM GAS  /var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s 			page 7


 176:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream2_IRQn 1 */
 177:Core/Src/stm32f4xx_it.c ****   sensorsI2cRxDmaIsr();
 176              		.loc 1 177 3 view .LVU24
 177 0008 FFF7FEFF 		bl	sensorsI2cRxDmaIsr
 178              	.LVL1:
 178:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream2_IRQn 1 */
 179:Core/Src/stm32f4xx_it.c **** }
 179              		.loc 1 179 1 is_stmt 0 view .LVU25
 180 000c 08BD     		pop	{r3, pc}
 181              	.L15:
 182 000e 00BF     		.align	2
 183              	.L14:
 184 0010 00000000 		.word	hdma_i2c3_rx
 185              		.cfi_endproc
 186              	.LFE140:
 188              		.section	.text.USART3_IRQHandler,"ax",%progbits
 189              		.align	1
 190              		.global	USART3_IRQHandler
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 195              	USART3_IRQHandler:
 196              	.LFB141:
 180:Core/Src/stm32f4xx_it.c **** 
 181:Core/Src/stm32f4xx_it.c **** /**
 182:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART3 global interrupt.
 183:Core/Src/stm32f4xx_it.c ****   */
 184:Core/Src/stm32f4xx_it.c **** void USART3_IRQHandler(void)
 185:Core/Src/stm32f4xx_it.c **** {
 197              		.loc 1 185 1 is_stmt 1 view -0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201 0000 08B5     		push	{r3, lr}
 202              	.LCFI1:
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 3, -8
 205              		.cfi_offset 14, -4
 186:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 0 */
 187:Core/Src/stm32f4xx_it.c **** 
 188:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART3_IRQn 0 */
 189:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart3);
 206              		.loc 1 189 3 view .LVU27
 207 0002 0248     		ldr	r0, .L18
 208 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 209              	.LVL2:
 190:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 1 */
 191:Core/Src/stm32f4xx_it.c **** 
 192:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART3_IRQn 1 */
 193:Core/Src/stm32f4xx_it.c **** }
 210              		.loc 1 193 1 is_stmt 0 view .LVU28
 211 0008 08BD     		pop	{r3, pc}
 212              	.L19:
 213 000a 00BF     		.align	2
 214              	.L18:
 215 000c 00000000 		.word	huart3
 216              		.cfi_endproc
ARM GAS  /var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s 			page 8


 217              	.LFE141:
 219              		.section	.text.TIM6_DAC_IRQHandler,"ax",%progbits
 220              		.align	1
 221              		.global	TIM6_DAC_IRQHandler
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 226              	TIM6_DAC_IRQHandler:
 227              	.LFB142:
 194:Core/Src/stm32f4xx_it.c **** 
 195:Core/Src/stm32f4xx_it.c **** /**
 196:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts.
 197:Core/Src/stm32f4xx_it.c ****   */
 198:Core/Src/stm32f4xx_it.c **** void TIM6_DAC_IRQHandler(void)
 199:Core/Src/stm32f4xx_it.c **** {
 228              		.loc 1 199 1 is_stmt 1 view -0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232 0000 08B5     		push	{r3, lr}
 233              	.LCFI2:
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 3, -8
 236              		.cfi_offset 14, -4
 200:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 0 */
 201:Core/Src/stm32f4xx_it.c **** 
 202:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 0 */
 203:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 237              		.loc 1 203 3 view .LVU30
 238 0002 0248     		ldr	r0, .L22
 239 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 240              	.LVL3:
 204:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 1 */
 205:Core/Src/stm32f4xx_it.c **** 
 206:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 1 */
 207:Core/Src/stm32f4xx_it.c **** }
 241              		.loc 1 207 1 is_stmt 0 view .LVU31
 242 0008 08BD     		pop	{r3, pc}
 243              	.L23:
 244 000a 00BF     		.align	2
 245              	.L22:
 246 000c 00000000 		.word	htim6
 247              		.cfi_endproc
 248              	.LFE142:
 250              		.section	.text.TIM7_IRQHandler,"ax",%progbits
 251              		.align	1
 252              		.global	TIM7_IRQHandler
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 257              	TIM7_IRQHandler:
 258              	.LFB143:
 208:Core/Src/stm32f4xx_it.c **** 
 209:Core/Src/stm32f4xx_it.c **** /**
 210:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM7 global interrupt.
 211:Core/Src/stm32f4xx_it.c ****   */
 212:Core/Src/stm32f4xx_it.c **** void TIM7_IRQHandler(void)
ARM GAS  /var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s 			page 9


 213:Core/Src/stm32f4xx_it.c **** {
 259              		.loc 1 213 1 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263 0000 08B5     		push	{r3, lr}
 264              	.LCFI3:
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 3, -8
 267              		.cfi_offset 14, -4
 214:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM7_IRQn 0 */
 215:Core/Src/stm32f4xx_it.c **** 
 216:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM7_IRQn 0 */
 217:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim7);
 268              		.loc 1 217 3 view .LVU33
 269 0002 0248     		ldr	r0, .L26
 270 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 271              	.LVL4:
 218:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM7_IRQn 1 */
 219:Core/Src/stm32f4xx_it.c **** 
 220:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM7_IRQn 1 */
 221:Core/Src/stm32f4xx_it.c **** }
 272              		.loc 1 221 1 is_stmt 0 view .LVU34
 273 0008 08BD     		pop	{r3, pc}
 274              	.L27:
 275 000a 00BF     		.align	2
 276              	.L26:
 277 000c 00000000 		.word	htim7
 278              		.cfi_endproc
 279              	.LFE143:
 281              		.section	.text.I2C3_EV_IRQHandler,"ax",%progbits
 282              		.align	1
 283              		.global	I2C3_EV_IRQHandler
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 288              	I2C3_EV_IRQHandler:
 289              	.LFB144:
 222:Core/Src/stm32f4xx_it.c **** 
 223:Core/Src/stm32f4xx_it.c **** /**
 224:Core/Src/stm32f4xx_it.c ****   * @brief This function handles I2C3 event interrupt.
 225:Core/Src/stm32f4xx_it.c ****   */
 226:Core/Src/stm32f4xx_it.c **** void I2C3_EV_IRQHandler(void)
 227:Core/Src/stm32f4xx_it.c **** {
 290              		.loc 1 227 1 is_stmt 1 view -0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294 0000 08B5     		push	{r3, lr}
 295              	.LCFI4:
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 3, -8
 298              		.cfi_offset 14, -4
 228:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C3_EV_IRQn 0 */
 229:Core/Src/stm32f4xx_it.c **** 
 230:Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C3_EV_IRQn 0 */
 231:Core/Src/stm32f4xx_it.c ****   HAL_I2C_EV_IRQHandler(&hi2c3);
ARM GAS  /var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s 			page 10


 299              		.loc 1 231 3 view .LVU36
 300 0002 0248     		ldr	r0, .L30
 301 0004 FFF7FEFF 		bl	HAL_I2C_EV_IRQHandler
 302              	.LVL5:
 232:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C3_EV_IRQn 1 */
 233:Core/Src/stm32f4xx_it.c **** 
 234:Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C3_EV_IRQn 1 */
 235:Core/Src/stm32f4xx_it.c **** }
 303              		.loc 1 235 1 is_stmt 0 view .LVU37
 304 0008 08BD     		pop	{r3, pc}
 305              	.L31:
 306 000a 00BF     		.align	2
 307              	.L30:
 308 000c 00000000 		.word	hi2c3
 309              		.cfi_endproc
 310              	.LFE144:
 312              		.section	.text.I2C3_ER_IRQHandler,"ax",%progbits
 313              		.align	1
 314              		.global	I2C3_ER_IRQHandler
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 319              	I2C3_ER_IRQHandler:
 320              	.LFB145:
 236:Core/Src/stm32f4xx_it.c **** 
 237:Core/Src/stm32f4xx_it.c **** /**
 238:Core/Src/stm32f4xx_it.c ****   * @brief This function handles I2C3 error interrupt.
 239:Core/Src/stm32f4xx_it.c ****   */
 240:Core/Src/stm32f4xx_it.c **** void I2C3_ER_IRQHandler(void)
 241:Core/Src/stm32f4xx_it.c **** {
 321              		.loc 1 241 1 is_stmt 1 view -0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325 0000 08B5     		push	{r3, lr}
 326              	.LCFI5:
 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 3, -8
 329              		.cfi_offset 14, -4
 242:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C3_ER_IRQn 0 */
 243:Core/Src/stm32f4xx_it.c **** 
 244:Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C3_ER_IRQn 0 */
 245:Core/Src/stm32f4xx_it.c ****   HAL_I2C_ER_IRQHandler(&hi2c3);
 330              		.loc 1 245 3 view .LVU39
 331 0002 0248     		ldr	r0, .L34
 332 0004 FFF7FEFF 		bl	HAL_I2C_ER_IRQHandler
 333              	.LVL6:
 246:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C3_ER_IRQn 1 */
 247:Core/Src/stm32f4xx_it.c **** 
 248:Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C3_ER_IRQn 1 */
 249:Core/Src/stm32f4xx_it.c **** }
 334              		.loc 1 249 1 is_stmt 0 view .LVU40
 335 0008 08BD     		pop	{r3, pc}
 336              	.L35:
 337 000a 00BF     		.align	2
 338              	.L34:
 339 000c 00000000 		.word	hi2c3
ARM GAS  /var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s 			page 11


 340              		.cfi_endproc
 341              	.LFE145:
 343              		.text
 344              	.Letext0:
 345              		.file 2 "/Applications/ARM/arm-none-eabi/include/machine/_default_types.h"
 346              		.file 3 "/Applications/ARM/arm-none-eabi/include/sys/_stdint.h"
 347              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 348              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 349              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 350              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 351              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 352              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 353              		.file 10 "Core/Inc/i2c.h"
 354              		.file 11 "Core/Inc/_i2c.h"
ARM GAS  /var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:20     .text.NMI_Handler:0000000000000000 $t
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:44     .text.HardFault_Handler:0000000000000000 $t
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:50     .text.HardFault_Handler:0000000000000000 HardFault_Handler
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:67     .text.MemManage_Handler:0000000000000000 $t
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:73     .text.MemManage_Handler:0000000000000000 MemManage_Handler
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:90     .text.BusFault_Handler:0000000000000000 $t
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:96     .text.BusFault_Handler:0000000000000000 BusFault_Handler
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:113    .text.UsageFault_Handler:0000000000000000 $t
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:119    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:136    .text.DebugMon_Handler:0000000000000000 $t
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:142    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:155    .text.DMA1_Stream2_IRQHandler:0000000000000000 $t
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:161    .text.DMA1_Stream2_IRQHandler:0000000000000000 DMA1_Stream2_IRQHandler
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:184    .text.DMA1_Stream2_IRQHandler:0000000000000010 $d
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:189    .text.USART3_IRQHandler:0000000000000000 $t
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:195    .text.USART3_IRQHandler:0000000000000000 USART3_IRQHandler
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:215    .text.USART3_IRQHandler:000000000000000c $d
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:220    .text.TIM6_DAC_IRQHandler:0000000000000000 $t
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:226    .text.TIM6_DAC_IRQHandler:0000000000000000 TIM6_DAC_IRQHandler
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:246    .text.TIM6_DAC_IRQHandler:000000000000000c $d
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:251    .text.TIM7_IRQHandler:0000000000000000 $t
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:257    .text.TIM7_IRQHandler:0000000000000000 TIM7_IRQHandler
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:277    .text.TIM7_IRQHandler:000000000000000c $d
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:282    .text.I2C3_EV_IRQHandler:0000000000000000 $t
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:288    .text.I2C3_EV_IRQHandler:0000000000000000 I2C3_EV_IRQHandler
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:308    .text.I2C3_EV_IRQHandler:000000000000000c $d
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:313    .text.I2C3_ER_IRQHandler:0000000000000000 $t
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:319    .text.I2C3_ER_IRQHandler:0000000000000000 I2C3_ER_IRQHandler
/var/folders/lk/5zh__s8n5wg4b5gr7zz7z9lc0000gn/T//ccFH849s.s:339    .text.I2C3_ER_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_DMA_IRQHandler
sensorsI2cRxDmaIsr
hdma_i2c3_rx
HAL_UART_IRQHandler
huart3
HAL_TIM_IRQHandler
htim6
htim7
HAL_I2C_EV_IRQHandler
hi2c3
HAL_I2C_ER_IRQHandler
